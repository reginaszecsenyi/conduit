{"uid":"79c8278f0c90b339","name":"test_registration","fullName":"test.test_conduit.TestConduit#test_registration","historyId":"449695f6039cc9b1b387a819d6e9ef14","time":{"start":1680884836092,"stop":1680884843512,"duration":7420},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5597e3374243 <unknown>\n#1 0x5597e31387a6 <unknown>\n#2 0x5597e317564d <unknown>\n#3 0x5597e3175761 <unknown>\n#4 0x5597e31b0da4 <unknown>\n#5 0x5597e31960ad <unknown>\n#6 0x5597e31ae932 <unknown>\n#7 0x5597e3195e53 <unknown>\n#8 0x5597e31689ea <unknown>\n#9 0x5597e3169b2e <unknown>\n#10 0x5597e33c8d5e <unknown>\n#11 0x5597e33cca80 <unknown>\n#12 0x5597e33ae8b0 <unknown>\n#13 0x5597e33cdb63 <unknown>\n#14 0x5597e339ff75 <unknown>\n#15 0x5597e33f0998 <unknown>\n#16 0x5597e33f0b27 <unknown>\n#17 0x5597e340bc23 <unknown>\n#18 0x7f1a1afbab43 <unknown>","statusTrace":"self = <test_conduit.TestConduit object at 0x7f8cac6a0820>\n\n    def test_registration(self):\n        signup_button = self.browser.find_element(By.CSS_SELECTOR, 'a[href=\"#/register\"]')\n        signup_button.click()\n        time.sleep(2)\n    \n        username_input = WebDriverWait(self.browser, 5).until(\n            EC.presence_of_element_located((By.CSS_SELECTOR, 'input[placeholder=\"Username\"]')))\n        email_input = WebDriverWait(self.browser, 5).until(\n            EC.presence_of_element_located((By.CSS_SELECTOR, 'input[placeholder=\"Email\"]')))\n        password_input = WebDriverWait(self.browser, 5).until(\n            EC.presence_of_element_located((By.CSS_SELECTOR, 'input[placeholder=\"Password\"]')))\n        confirm_signup = WebDriverWait(self.browser, 5).until(\n            EC.presence_of_element_located((By.CSS_SELECTOR, 'button[class=\"btn btn-lg btn-primary pull-xs-right\"]')))\n    \n        username_input.send_keys('tesztfelhasznalo10')\n        email_input.send_keys('teszt10@teszt.com')\n        password_input.send_keys('Teszt456')\n        confirm_signup.click()\n    \n>       registration_confirmed = WebDriverWait(self.browser, 5).until(\n            EC.presence_of_element_located((By.CSS_SELECTOR, 'div[class=\"swal-title\"]')))\n\ntest/test_conduit.py:57: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"0be4f5c4f000679102180163b954a6b7\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x7f8cac76a290>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x5597e3374243 <unknown>\nE       #1 0x5597e31387a6 <unknown>\nE       #2 0x5597e317564d <unknown>\nE       #3 0x5597e3175761 <unknown>\nE       #4 0x5597e31b0da4 <unknown>\nE       #5 0x5597e31960ad <unknown>\nE       #6 0x5597e31ae932 <unknown>\nE       #7 0x5597e3195e53 <unknown>\nE       #8 0x5597e31689ea <unknown>\nE       #9 0x5597e3169b2e <unknown>\nE       #10 0x5597e33c8d5e <unknown>\nE       #11 0x5597e33cca80 <unknown>\nE       #12 0x5597e33ae8b0 <unknown>\nE       #13 0x5597e33cdb63 <unknown>\nE       #14 0x5597e339ff75 <unknown>\nE       #15 0x5597e33f0998 <unknown>\nE       #16 0x5597e33f0b27 <unknown>\nE       #17 0x5597e340bc23 <unknown>\nE       #18 0x7f1a1afbab43 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_xunit_setup_method_fixture_TestConduit","time":{"start":1680884834051,"stop":1680884836091,"duration":2040},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5597e3374243 <unknown>\n#1 0x5597e31387a6 <unknown>\n#2 0x5597e317564d <unknown>\n#3 0x5597e3175761 <unknown>\n#4 0x5597e31b0da4 <unknown>\n#5 0x5597e31960ad <unknown>\n#6 0x5597e31ae932 <unknown>\n#7 0x5597e3195e53 <unknown>\n#8 0x5597e31689ea <unknown>\n#9 0x5597e3169b2e <unknown>\n#10 0x5597e33c8d5e <unknown>\n#11 0x5597e33cca80 <unknown>\n#12 0x5597e33ae8b0 <unknown>\n#13 0x5597e33cdb63 <unknown>\n#14 0x5597e339ff75 <unknown>\n#15 0x5597e33f0998 <unknown>\n#16 0x5597e33f0b27 <unknown>\n#17 0x5597e340bc23 <unknown>\n#18 0x7f1a1afbab43 <unknown>","statusTrace":"self = <test_conduit.TestConduit object at 0x7f8cac6a0820>\n\n    def test_registration(self):\n        signup_button = self.browser.find_element(By.CSS_SELECTOR, 'a[href=\"#/register\"]')\n        signup_button.click()\n        time.sleep(2)\n    \n        username_input = WebDriverWait(self.browser, 5).until(\n            EC.presence_of_element_located((By.CSS_SELECTOR, 'input[placeholder=\"Username\"]')))\n        email_input = WebDriverWait(self.browser, 5).until(\n            EC.presence_of_element_located((By.CSS_SELECTOR, 'input[placeholder=\"Email\"]')))\n        password_input = WebDriverWait(self.browser, 5).until(\n            EC.presence_of_element_located((By.CSS_SELECTOR, 'input[placeholder=\"Password\"]')))\n        confirm_signup = WebDriverWait(self.browser, 5).until(\n            EC.presence_of_element_located((By.CSS_SELECTOR, 'button[class=\"btn btn-lg btn-primary pull-xs-right\"]')))\n    \n        username_input.send_keys('tesztfelhasznalo10')\n        email_input.send_keys('teszt10@teszt.com')\n        password_input.send_keys('Teszt456')\n        confirm_signup.click()\n    \n>       registration_confirmed = WebDriverWait(self.browser, 5).until(\n            EC.presence_of_element_located((By.CSS_SELECTOR, 'div[class=\"swal-title\"]')))\n\ntest/test_conduit.py:57: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"0be4f5c4f000679102180163b954a6b7\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x7f8cac76a290>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x5597e3374243 <unknown>\nE       #1 0x5597e31387a6 <unknown>\nE       #2 0x5597e317564d <unknown>\nE       #3 0x5597e3175761 <unknown>\nE       #4 0x5597e31b0da4 <unknown>\nE       #5 0x5597e31960ad <unknown>\nE       #6 0x5597e31ae932 <unknown>\nE       #7 0x5597e3195e53 <unknown>\nE       #8 0x5597e31689ea <unknown>\nE       #9 0x5597e3169b2e <unknown>\nE       #10 0x5597e33c8d5e <unknown>\nE       #11 0x5597e33cca80 <unknown>\nE       #12 0x5597e33ae8b0 <unknown>\nE       #13 0x5597e33cdb63 <unknown>\nE       #14 0x5597e339ff75 <unknown>\nE       #15 0x5597e33f0998 <unknown>\nE       #16 0x5597e33f0b27 <unknown>\nE       #17 0x5597e340bc23 <unknown>\nE       #18 0x7f1a1afbab43 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","steps":[],"attachments":[{"uid":"444ea9a3f693baf5","name":"stderr","source":"444ea9a3f693baf5.txt","type":"text/plain","size":159}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"_xunit_setup_method_fixture_TestConduit::0","time":{"start":1680884843558,"stop":1680884844559,"duration":1001},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"parentSuite","value":"test"},{"name":"suite","value":"test_conduit"},{"name":"subSuite","value":"TestConduit"},{"name":"host","value":"fv-az646-596"},{"name":"thread","value":"3067-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test.test_conduit"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"79c8278f0c90b339.json","parameterValues":[]}