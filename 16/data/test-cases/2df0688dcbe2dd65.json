{"uid":"2df0688dcbe2dd65","name":"test_login","fullName":"test.test_conduit.TestConduit#test_login","historyId":"dfb22bde77ddc1a4db05d8eafb8310d3","time":{"start":1680884845774,"stop":1680884916258,"duration":70484},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x562741b4a243 <unknown>\n#1 0x56274190e7a6 <unknown>\n#2 0x56274194b64d <unknown>\n#3 0x56274194b761 <unknown>\n#4 0x562741986da4 <unknown>\n#5 0x56274196c0ad <unknown>\n#6 0x562741984932 <unknown>\n#7 0x56274196be53 <unknown>\n#8 0x56274193e9ea <unknown>\n#9 0x56274193fb2e <unknown>\n#10 0x562741b9ed5e <unknown>\n#11 0x562741ba2a80 <unknown>\n#12 0x562741b848b0 <unknown>\n#13 0x562741ba3b63 <unknown>\n#14 0x562741b75f75 <unknown>\n#15 0x562741bc6998 <unknown>\n#16 0x562741bc6b27 <unknown>\n#17 0x562741be1c23 <unknown>\n#18 0x7f07210c7b43 <unknown>","statusTrace":"self = <test_conduit.TestConduit object at 0x7f8cac6a0940>\n\n    def test_login(self):\n        # Rákattintok a főoldalon a Sign up gombra, majd kikeresem a beviteli mezők webelementjeit, és a megfelelő adatokkal kitöltöm a mezőket.\n    \n        signin_button = self.browser.find_element(By.CSS_SELECTOR, 'a[href = \"#/login\"]')\n        signin_button.click()\n    \n        email_input = WebDriverWait(self.browser, 5).until(\n            EC.presence_of_element_located((By.CSS_SELECTOR, 'input[placeholder=\"Email\"]')))\n        password_input = WebDriverWait(self.browser, 5).until(\n            EC.presence_of_element_located((By.CSS_SELECTOR, 'input[placeholder=\"Password\"]')))\n        confirm_signin = WebDriverWait(self.browser, 5).until(\n            EC.presence_of_element_located((By.CSS_SELECTOR, 'button[class=\"btn btn-lg btn-primary pull-xs-right\"]')))\n    \n        email_input.send_keys(self.email)\n        password_input.send_keys(self.password)\n        confirm_signin.click()\n        time.sleep(10)\n    \n        # A bejelentkezett felületen kikeresem a profilomat jelző webelementet, és összehasonlítom, hogy megegyezik-e az email címhez tartozó felhasználónévvel.\n    \n>       profile = WebDriverWait(self.browser, 60).until(EC.presence_of_element_located((By.CSS_SELECTOR, f'a[href=\"#/@{self.username}/\"]')))\n\ntest/test_conduit.py:88: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"1f6430858c36f8cbbe8a8dcafbf6a1a5\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x7f8cac5a70a0>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x562741b4a243 <unknown>\nE       #1 0x56274190e7a6 <unknown>\nE       #2 0x56274194b64d <unknown>\nE       #3 0x56274194b761 <unknown>\nE       #4 0x562741986da4 <unknown>\nE       #5 0x56274196c0ad <unknown>\nE       #6 0x562741984932 <unknown>\nE       #7 0x56274196be53 <unknown>\nE       #8 0x56274193e9ea <unknown>\nE       #9 0x56274193fb2e <unknown>\nE       #10 0x562741b9ed5e <unknown>\nE       #11 0x562741ba2a80 <unknown>\nE       #12 0x562741b848b0 <unknown>\nE       #13 0x562741ba3b63 <unknown>\nE       #14 0x562741b75f75 <unknown>\nE       #15 0x562741bc6998 <unknown>\nE       #16 0x562741bc6b27 <unknown>\nE       #17 0x562741be1c23 <unknown>\nE       #18 0x7f07210c7b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_xunit_setup_method_fixture_TestConduit","time":{"start":1680884844562,"stop":1680884845773,"duration":1211},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"afterStages":[{"name":"_xunit_setup_method_fixture_TestConduit::0","time":{"start":1680884916266,"stop":1680884917268,"duration":1002},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"parentSuite","value":"test"},{"name":"suite","value":"test_conduit"},{"name":"subSuite","value":"TestConduit"},{"name":"host","value":"fv-az646-596"},{"name":"thread","value":"3067-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test.test_conduit"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"2df0688dcbe2dd65.json","parameterValues":[]}