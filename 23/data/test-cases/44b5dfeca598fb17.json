{"uid":"44b5dfeca598fb17","name":"test_registration","fullName":"test.test_conduit.TestConduit#test_registration","historyId":"449695f6039cc9b1b387a819d6e9ef14","time":{"start":1680963783430,"stop":1680963788026,"duration":4596},"status":"failed","statusMessage":"AssertionError: assert '' == 'Welcome!'\n  - Welcome!","statusTrace":"self = <test_conduit.TestConduit object at 0x7f4c562c8d30>\n\n    def test_registration(self):\n        signup_button = self.browser.find_element(By.CSS_SELECTOR, 'a[href=\"#/register\"]')\n        signup_button.click()\n        time.sleep(2)\n    \n        username_input = WebDriverWait(self.browser, 5).until(\n            EC.presence_of_element_located((By.CSS_SELECTOR, 'input[placeholder=\"Username\"]')))\n        email_input = WebDriverWait(self.browser, 5).until(\n            EC.presence_of_element_located((By.CSS_SELECTOR, 'input[placeholder=\"Email\"]')))\n        password_input = WebDriverWait(self.browser, 5).until(\n            EC.presence_of_element_located((By.CSS_SELECTOR, 'input[placeholder=\"Password\"]')))\n        confirm_signup = WebDriverWait(self.browser, 5).until(\n            EC.presence_of_element_located((By.CSS_SELECTOR, 'button[class=\"btn btn-lg btn-primary pull-xs-right\"]')))\n    \n        username_input.send_keys('tesztfelhasznalo10')\n        email_input.send_keys('teszt10@teszt.com')\n        password_input.send_keys('Teszt456')\n        confirm_signup.click()\n    \n        registration_confirmed = WebDriverWait(self.browser, 5).until(\n            EC.presence_of_element_located((By.CSS_SELECTOR, 'div[class=\"swal-title\"]')))\n    \n>       assert registration_confirmed.text == \"Welcome!\"\nE       AssertionError: assert '' == 'Welcome!'\nE         - Welcome!\n\ntest/test_conduit.py:60: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_xunit_setup_method_fixture_TestConduit","time":{"start":1680963779683,"stop":1680963783429,"duration":3746},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert '' == 'Welcome!'\n  - Welcome!","statusTrace":"self = <test_conduit.TestConduit object at 0x7f4c562c8d30>\n\n    def test_registration(self):\n        signup_button = self.browser.find_element(By.CSS_SELECTOR, 'a[href=\"#/register\"]')\n        signup_button.click()\n        time.sleep(2)\n    \n        username_input = WebDriverWait(self.browser, 5).until(\n            EC.presence_of_element_located((By.CSS_SELECTOR, 'input[placeholder=\"Username\"]')))\n        email_input = WebDriverWait(self.browser, 5).until(\n            EC.presence_of_element_located((By.CSS_SELECTOR, 'input[placeholder=\"Email\"]')))\n        password_input = WebDriverWait(self.browser, 5).until(\n            EC.presence_of_element_located((By.CSS_SELECTOR, 'input[placeholder=\"Password\"]')))\n        confirm_signup = WebDriverWait(self.browser, 5).until(\n            EC.presence_of_element_located((By.CSS_SELECTOR, 'button[class=\"btn btn-lg btn-primary pull-xs-right\"]')))\n    \n        username_input.send_keys('tesztfelhasznalo10')\n        email_input.send_keys('teszt10@teszt.com')\n        password_input.send_keys('Teszt456')\n        confirm_signup.click()\n    \n        registration_confirmed = WebDriverWait(self.browser, 5).until(\n            EC.presence_of_element_located((By.CSS_SELECTOR, 'div[class=\"swal-title\"]')))\n    \n>       assert registration_confirmed.text == \"Welcome!\"\nE       AssertionError: assert '' == 'Welcome!'\nE         - Welcome!\n\ntest/test_conduit.py:60: AssertionError","steps":[],"attachments":[{"uid":"475fce6f343330d4","name":"stderr","source":"475fce6f343330d4.txt","type":"text/plain","size":159}],"parameters":[],"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true,"stepsCount":0},"afterStages":[{"name":"_xunit_setup_method_fixture_TestConduit::0","time":{"start":1680963788170,"stop":1680963789171,"duration":1001},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0}],"labels":[{"name":"parentSuite","value":"test"},{"name":"suite","value":"test_conduit"},{"name":"subSuite","value":"TestConduit"},{"name":"host","value":"fv-az574-387"},{"name":"thread","value":"3051-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test.test_conduit"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"44b5dfeca598fb17.json","parameterValues":[]}